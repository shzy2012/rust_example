// '_ — 匿名生命周期
/*
Rust 2018 允许你明确标记生命周期被省略的地方，对于此省略可能不清楚的类型。 
要做到这一点，你可以使用特殊的生命周期'_，就像你可以用语法 let x：_ = ..;明确标记一个类型一样。
要我们说的话，无论出于什么原因，我们在 &'a str 周围有一个简单的封装：
*/ 

/*
'_究竟是什么意思？这取决于具体情况！在输出上下文中，与 make_wrapper 的返回类型一样， 它指的是所有“输出”位置的单个生命周期。
在输入上下文中，为每个“输入位置”生成新的生命周期。 更具体地说，要了解输入上下文，请考虑以下示例：
*/ 

// Rust 2015
struct Foo<'a, 'b: 'a> {
    field: &'a &'b str,
}

impl<'a, 'b: 'a> Foo<'a, 'b> {
    // some methods...
}


// Rust 2018
impl Foo<'_, '_> {
    // some methods...
}